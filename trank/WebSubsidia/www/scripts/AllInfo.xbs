#COMMAND ? [<x,...>] => WSH:Echo(<x>)
#INCLUDE "pathes.xinc"
  SET DATE FORMAT "dd.mm.yyyy"
  nStart := SECONDS()
  pth:="..\"+files_db
  FindDossier := 9002400
  set date to GERMAN
  Set Default to &(pth)
  ? '{"Delo":{'
  aInfo := GetInfo('subsid_p','LCHET',FindDossier,'NUM')
  NUM := aInfo[2]
  ? aInfo[1], ','
  aInfo := GetInfo('register','NUM',NUM,'')
  ? aInfo[1], ','
  aInfo := GetInfo('sv2','LCHET',FindDossier,'')
  ? aInfo[1], ','
  aInfo := GetInfo('dohod_p','PLCHET',FindDossier,'')
  ? aInfo[1], ','
  aInfo := GetInfo('income_p','LCHET',FindDossier,'')
  ? aInfo[1], ','
  aInfo := GetInfo('kvsum_p','LCHET',FindDossier,'')
  ? aInfo[1], ','
  aInfo := GetInfo('kvplat_p','LCHET',FindDossier,'')
  ? aInfo[1], ','
  aInfo := GetInfo('arxsub','LCHET',FindDossier,'')
  ? aInfo[1],','
  aInfo := GetInfo('arhivsum','LCHET',FindDossier,'')
  ? aInfo[1],','
  aInfo := GetInfo('sv5_p','LCHET',FindDossier,'')
  ? aInfo[1],','
  aInfo := GetInfo('sv6_p','LCHET',FindDossier,'')
  ? aInfo[1],','
  aInfo := GetInfo('sv7_p','LCHET',FindDossier,'')
  ? aInfo[1]
  ? '},'
  ? '"Elapsed":"'+AnyToStr(SECONDS() - nStart,'##.###')+'"}'

function GetInfo
Param BaseName, IndFieldName, FindValue, OutFieldName
  use &(BaseName)
  index on &(IndFieldName) to &(BaseName+'_'+IndFieldName)
  FieldCount :=FCOUNT()
  aFieldNames := ARRAY(FieldCount)
  aTypes := ARRAY(FieldCount)
  aWidths := ARRAY(FieldCount)
  aDecimals := ARRAY(FieldCount)
  &(BaseName)->(AFIELDS(aFieldNames, aTypes, aWidths, aDecimals))
  SET FILTER TO IndFieldName+" = "+AnyToStr(FindValue)
  // ? aFieldNames[1], FindValue
  OutJson :='"'+BaseName+'":{'
  OutValue := ''
  RecCounter := 0
  ValueFound := .f.
  seek FindValue
  do while &(IndFieldName) == FindValue 
    if Deleted()
      Skip
      loop
    endif
    if 0<RecCounter++ 
      OutJson = OutJson+',' +chr(13)+chr(10)
    else
      OutJson = OutJson+'"fields":['
      for I_Counter = 1 to FieldCount
        if I_Counter>1
          OutJson = OutJson+','
        endif
        OutJson = OutJson+'"'+aFieldNames[I_Counter]+'"'
      next
      OutJson = OutJson+'],'+chr(13)+chr(10)+'"types":['
      for I_Counter = 1 to FieldCount
        if I_Counter>1
          OutJson = OutJson+','
        endif
        OutJson = OutJson+'"'+aTypes[I_Counter]+':'+IntToStr(aWidths[I_Counter])+'.'+ IntToStr(aDecimals[I_Counter])+'"'
      next
      OutJson = OutJson+'],'+chr(13)+chr(10)+'"values":['
      ValueFound = .t.
    endif
    OutJson = OutJson+'['
    for I_Counter = 1 to FieldCount
      Value:=&(aFieldNames[I_Counter])
      if ValType(Value) == 'C'
        StrValue = StrToJsonFmt(ToAnsi(AllTrim(Value)))
      else 
        StrValue=AnyToStr(Value)
      endif
      if I_Counter>1
        OutJson = OutJson+', '
      endif
      OutJson=OutJson+'"'+StrValue+'"'
      if aFieldNames[I_Counter] == OutFieldName
        OutValue = Value
      endif
    next I_Counter
    OutJson = OutJson+']'
    skip
  enddo
  close &(BaseName)
  if ValueFound 
    OutJson = OutJson+']'
  endif
  OutJson = OutJson+'}'
Return {OutJson, OutValue}

#INCLUDE "AnsiOEM.xinc"